/*
 * generated by Xtext 2.12.0
 */
grammar InternalRectrine;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package poli.computadores.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package poli.computadores.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import poli.computadores.services.RectrineGrammarAccess;

}

@parser::members {

 	private RectrineGrammarAccess grammarAccess;

    public InternalRectrineParser(TokenStream input, RectrineGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected RectrineGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgramAccess().getEntidadesEntidadeParserRuleCall_0());
			}
			lv_entidades_0_0=ruleEntidade
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgramRule());
				}
				add(
					$current,
					"entidades",
					lv_entidades_0_0,
					"poli.computadores.Rectrine.Entidade");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleEntidade
entryRuleEntidade returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntidadeRule()); }
	iv_ruleEntidade=ruleEntidade
	{ $current=$iv_ruleEntidade.current; }
	EOF;

// Rule Entidade
ruleEntidade returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntidadeAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntidadeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntidadeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntidadeAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntidadeAccess().getCamposCampoParserRuleCall_3_0());
				}
				lv_campos_3_0=ruleCampo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntidadeRule());
					}
					add(
						$current,
						"campos",
						lv_campos_3_0,
						"poli.computadores.Rectrine.Campo");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntidadeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCampo
entryRuleCampo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCampoRule()); }
	iv_ruleCampo=ruleCampo
	{ $current=$iv_ruleCampo.current; }
	EOF;

// Rule Campo
ruleCampo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCampoAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCampoRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getCampoAccess().getColonKeyword_1());
		}
		(
			(
				(
					lv_tipo_2_0=RULE_TIPO
					{
						newLeafNode(lv_tipo_2_0, grammarAccess.getCampoAccess().getTipoTIPOTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCampoRule());
						}
						setWithLastConsumed(
							$current,
							"tipo",
							lv_tipo_2_0,
							"poli.computadores.Rectrine.TIPO");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getCampoAccess().getRelLigacaoParserRuleCall_2_1_0());
					}
					lv_rel_3_0=ruleLigacao
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCampoRule());
						}
						set(
							$current,
							"rel",
							lv_rel_3_0,
							"poli.computadores.Rectrine.Ligacao");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLigacao
entryRuleLigacao returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLigacaoRule()); }
	iv_ruleLigacao=ruleLigacao
	{ $current=$iv_ruleLigacao.current; }
	EOF;

// Rule Ligacao
ruleLigacao returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLigacaoRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getLigacaoAccess().getEnt1EntidadeCrossReference_0_0());
				}
			)
		)
		(
			(
				lv_mul1_1_0=RULE_MULT
				{
					newLeafNode(lv_mul1_1_0, grammarAccess.getLigacaoAccess().getMul1MULTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLigacaoRule());
					}
					setWithLastConsumed(
						$current,
						"mul1",
						lv_mul1_1_0,
						"poli.computadores.Rectrine.MULT");
				}
			)
		)
		otherlv_2='->'
		{
			newLeafNode(otherlv_2, grammarAccess.getLigacaoAccess().getHyphenMinusGreaterThanSignKeyword_2());
		}
		(
			(
				lv_mul2_3_0=RULE_MULT
				{
					newLeafNode(lv_mul2_3_0, grammarAccess.getLigacaoAccess().getMul2MULTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLigacaoRule());
					}
					setWithLastConsumed(
						$current,
						"mul2",
						lv_mul2_3_0,
						"poli.computadores.Rectrine.MULT");
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLigacaoRule());
					}
				}
				otherlv_4=RULE_ID
				{
					newLeafNode(otherlv_4, grammarAccess.getLigacaoAccess().getEnt2EntidadeCrossReference_4_0());
				}
			)
		)
	)
;

RULE_TIPO : ('integer'|'string'|'boolean'|'datetime');

RULE_MULT : ('one'|'many');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

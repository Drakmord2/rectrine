/*
 * generated by Xtext 2.12.0
 */
package poli.compiladores.rec.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import poli.compiladores.rec.ide.contentassist.antlr.internal.InternalRectrineParser;
import poli.compiladores.rec.services.RectrineGrammarAccess;

public class RectrineParser extends AbstractContentAssistParser {

	@Inject
	private RectrineGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalRectrineParser createParser() {
		InternalRectrineParser result = new InternalRectrineParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getCampoAccess().getAlternatives_2(), "rule__Campo__Alternatives_2");
					put(grammarAccess.getEntidadeAccess().getGroup(), "rule__Entidade__Group__0");
					put(grammarAccess.getCampoAccess().getGroup(), "rule__Campo__Group__0");
					put(grammarAccess.getLigacaoAccess().getGroup(), "rule__Ligacao__Group__0");
					put(grammarAccess.getProgramAccess().getEntidadesAssignment(), "rule__Program__EntidadesAssignment");
					put(grammarAccess.getEntidadeAccess().getNameAssignment_1(), "rule__Entidade__NameAssignment_1");
					put(grammarAccess.getEntidadeAccess().getCamposAssignment_3(), "rule__Entidade__CamposAssignment_3");
					put(grammarAccess.getCampoAccess().getNameAssignment_0(), "rule__Campo__NameAssignment_0");
					put(grammarAccess.getCampoAccess().getTipoAssignment_2_0(), "rule__Campo__TipoAssignment_2_0");
					put(grammarAccess.getCampoAccess().getRelAssignment_2_1(), "rule__Campo__RelAssignment_2_1");
					put(grammarAccess.getLigacaoAccess().getEnt1Assignment_0(), "rule__Ligacao__Ent1Assignment_0");
					put(grammarAccess.getLigacaoAccess().getMul1Assignment_1(), "rule__Ligacao__Mul1Assignment_1");
					put(grammarAccess.getLigacaoAccess().getMul2Assignment_3(), "rule__Ligacao__Mul2Assignment_3");
					put(grammarAccess.getLigacaoAccess().getEnt2Assignment_4(), "rule__Ligacao__Ent2Assignment_4");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public RectrineGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(RectrineGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
